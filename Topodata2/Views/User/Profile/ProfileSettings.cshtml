@using Topodata2.Models.User
@model UserProfileSettings
@{
    ViewBag.Title = "Configuracion";
}

<div class="container content profile">
    <div class="row">
        @{
            Html.RenderPartial("Profile/_ProfileLeftPanel");
        }
        <div class="col-md-9">
            @if (TempData["OperationStatus"] != null)
            {
                if (TempData["OperationStatus"].ToString() == "Error")
                {
                    Html.RenderPartial("_AlertError");
                }
                if (TempData["OperationStatus"].ToString() == "Success")
                {
                    Html.RenderPartial("_AlertSuccess");
                }
            }
            <div class="profile-body margin-bottom-20">
                <div class="tab-v1">
                    <ul class="nav nav-justified nav-tabs">
                        <li><a data-toggle="tab" href="#profile">Editar Perfil</a></li>
                        <li><a data-toggle="tab" href="#passwordTab">Cambiar Contraseña</a></li>
                        <li><a data-toggle="tab" href="#settings">Notificaciones</a></li>
                    </ul>
                    <div class="tab-content">
                        @{Html.RenderPartial("Profile/_SettingsEditProfile",UserSettingsManager.GetCurrentEditProfileModel());}
                        @{Html.RenderPartial("Profile/_SettingsPassword");}
                        @{Html.RenderPartial("Profile/_SettingsNotifications", UserSettingsManager.GetCurrentUserProfileSettingsNotificationViewModel());}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section cssPlugins
{
    <link href="~/resources/plugins/line-icons/line-icons.css" rel="stylesheet"/>
    <link href="~/resources/plugins/sky-forms-pro/skyforms/css/sky-forms.css" rel="stylesheet"/>
    <link href="~/resources/plugins/sky-forms-pro/skyforms/custom/custom-sky-forms.css" rel="stylesheet"/>
}
@section cssPageStyle
{
    <link href="~/resources/css/pages/profile.css" rel="stylesheet"/>
}
@section PageScripts
{
    <script src="~/resources/plugins/sky-forms-pro/skyforms/js/jquery-ui.min.js"></script>
    <script src="~/resources/plugins/sky-forms-pro/skyforms/js/jquery.maskedinput.min.js"></script>
    <script src="~/resources/js/forms/reg.js"></script>
    <script src="~/resources/js/forms/checkout.js"></script>
    <script src="~/resources/js/plugins/datepicker.js"></script>
}
@section documentReady
{
    RegForm.initRegForm();
    Datepicker.initDatepicker();
    CheckoutForm.initCheckoutForm();
}
@section ScriptsFunction
{
    <script>
        $(document).ready(function() {
            var form = $('#sky-form3'),
                formData = $.data(form[0]),
                settings = formData.validator.settings
                // Store existing event handlers in local variables
                ,
                oldErrorPlacement = settings.errorPlacement,
                oldSuccess = settings.success;

            settings.errorPlacement = function(label, element) {

                // Call old handler so it can update the HTML
                oldErrorPlacement(label, element);

                // Add Bootstrap classes to newly added elements
                label.parents('label').addClass('state-error');
                label.addClass('text-danger');

            };

            settings.success = function(label) {
                // Remove error class from <div class="form-group">, but don't worry about
                // validation error messages as the plugin is going to remove it anyway

                label.parents('label').removeClass('state-error');

                // Call old handler to do rest of the work
                oldSuccess(label);
            };
        });
    </script>
<script>
        $(document).ready(function() {
            var form = $('#sky-form1'),
                formData = $.data(form[0]),
                settings = formData.validator.settings
                // Store existing event handlers in local variables
                ,
                oldErrorPlacement = settings.errorPlacement,
                oldSuccess = settings.success;

            settings.errorPlacement = function(label, element) {

                // Call old handler so it can update the HTML
                oldErrorPlacement(label, element);

                // Add Bootstrap classes to newly added elements
                label.parents('label').addClass('state-error');
                label.addClass('text-danger');

            };

            settings.success = function(label) {
                // Remove error class from <div class="form-group">, but don't worry about
                // validation error messages as the plugin is going to remove it anyway

                label.parents('label').removeClass('state-error');

                // Call old handler to do rest of the work
                oldSuccess(label);
            };
        });
</script>
    <script>
        (function($) {

            //re-set all client validation given a jQuery selected form or child
            $.fn.resetValidation = function() {

                var $form = this.closest('form');


                //reset jQuery Validate's internals
                $form.validate().resetForm();

                //reset unobtrusive validation summary, if it exists
                $form.find("[data-valmsg-summary=true]")
                    .removeClass("validation-summary-errors")
                    .addClass("validation-summary-valid")
                    .find("ul").empty();

                //reset unobtrusive field level, if it exists
                $form.find("[data-valmsg-replace]")
                    .removeClass("field-validation-error")
                    .addClass("field-validation-valid")
                    .empty();
                $form.find('label').removeClass('state-error');

                return $form;
            };
        })(jQuery);
    </script>
    @*<script>
        $(".nextEditable").click(function() {
            $(this).next().prop('readonly', false);
            $(this).next().prop('disabled', false);
        });
    </script>*@
    <script>
        $('.changeable').keyup(function() {
            if ($(this).val()) {
                $("#submitButton").removeAttr('disabled');
                $("#submitButton").removeAttr('style');
            }
        });
        $(document).on("click", "button[type='reset']", function(e) {
            $("#submitButton").attr('disabled', "");
            $("#submitButton").attr('style', "opacity: 0.5");
        });
        // Javascript to enable link to tab
        var url = document.location.toString();
        if (url.match('#')) {
            $('.nav-tabs a[href="#' + url.split('#')[1] + '"]').tab('show');
        }

        // Change hash for page-reload
        $('.nav-tabs a').on('shown.bs.tab', function(e) {
            window.location.hash = e.target.hash;
        });
    </script>

}
