@using Topodata2.Models.Service
@model DocumentViewModel
<h2 class="heading-md">Añadir Documento</h2>
<br/>
    @using (Html.BeginForm("AddDocument", "Administration", FormMethod.Post, new {@class = "sky-form", @id = "AddDocumentForm", enctype = "multipart/form-data"}))
    {
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(m => m.IdSubCategoria)</dt>
            <dd>
                <section><label class="select">
                        @Html.DropDownListFor(m => m.IdSubCategoria, new SelectList(ServiceManager.GetAllSubCategories(), "Id", "Descripcion", "Seleecione un Sector"), new {@id = "subcategorielist", @onchange = "javascript:getListFromList(this.value,'idcontenido','/Administration/GetContenidoBySubCategorie/');", @required = ""})
                        <i></i>
                        @Html.ValidationMessageFor(m => m.IdSubCategoria)
                    </label>
                </section>
            </dd>
            <dt>@Html.DisplayNameFor(m => m.IdContenido)</dt>
            <dd>
                <section>
                    <label class="select">
                        @Html.DropDownListFor(m => m.IdContenido, new List<SelectListItem>(), new {@id = "idcontenido", @required = ""})
                        <i></i>
                        @Html.ValidationMessageFor(m => m.IdContenido)
                    </label>
                </section>
            </dd>
            <dt>@Html.DisplayNameFor(m => m.Url)</dt>
            <dd>
                <section>
                    <label class="input">
                        <i class="icon-append fa fa-pencil"></i>
                        @Html.EditorFor(m => m.Url, new {htmlAttributes = new {@placeholder = "Url", @required = ""}})
                        <b class="tooltip tooltip-bottom-right">@Html.DisplayNameFor(m => m.Url)</b>
                        @Html.ValidationMessageFor(m => m.Url)
                    </label>
                </section>
            </dd>
            <dt>@Html.DisplayNameFor(m => m.Nombre)</dt>
            <dd>
                <section>
                    <label class="input">
                        <i class="icon-append fa fa-pencil"></i>
                        @Html.EditorFor(m => m.Nombre, new {htmlAttributes = new {@placeholder = "Nombre", @required = ""}})
                        <b class="tooltip tooltip-bottom-right">@Html.DisplayNameFor(m => m.Nombre)</b>
                        @Html.ValidationMessageFor(m => m.Nombre)
                    </label>
                </section>
            </dd>
            <dt>@Html.DisplayNameFor(m => m.DescripcionHtml)</dt>
            <dd>
                <section>
                    <label class="textarea">
                        <i class="icon-append fa fa-pencil"></i>
                        @Html.EditorFor(m => m.DescripcionHtml, new {htmlAttributes = new {@rows = "5", @required = ""}})
                        <b class="tooltip tooltip-bottom-right">@Html.DisplayNameFor(m => m.DescripcionHtml)</b>
                        @Html.ValidationMessageFor(m => m.DescripcionHtml)
                    </label>
                </section>
            </dd>
            @Html.TextBoxFor(m => m.Descripcion, new {@hidden = "hidden"})
            <dt>@Html.DisplayNameFor(m => m.ImageUpload)</dt>
            <dd>
                <section>
                    <label for="file" class="input input-file">
                        <div class="button">
                            @Html.TextBoxFor(m => m.ImageUpload, new {@id = "file", @type = "file", @onchange = "this.parentNode.nextElementSibling.value = this.value"})
                            Seleccionar
                        </div>
                        <input readonly type="text">
                    </label>
                    @Html.ValidationMessageFor(m => m.ImageUpload)
                </section>
            </dd>
        </dl>
        <button type="submit" class="btn btn-u">Añadir documento</button>
    }